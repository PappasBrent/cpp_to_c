grammar: |-
  EQUALITY_EXPRESSION :=  ? EQUALITY_EXPRESSION as defined in equality_expressions.yaml ? ;
  AND_EXPRESSION      :=  AND_EXPRESSION, '&', EQUALITY_EXPRESSION ;

triads:
  - un-preprocessed: |-
      #define AND(a, b) a & b

      int main(void) {
        int zero = AND(0b01UL, 0b10);
        return 0;
      }
    preprocessed: |-
      int main(void) {
        int zero = 0b01UL & 0b10;
        return 0;
      }
    converted: |-
      // Return type is inferred from invocations and types of operands
      // in expression's body
      unsigned long AND(unsigned long a, int b) { return a & b; }

      int main(void) {
        int zero = AND(0b01UL, 0b10);
        return 0;
      }
