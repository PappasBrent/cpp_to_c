grammar: |-
  AND_EXPRESSION          :=  ? AND_EXPRESSION as defined in and_expressions.yaml; ?

  EXCLUSIVE_OR_EXPRESSION :=  EXCLUSIVE_OR_EXPRESSION, '^', AND_EXPRESSION ;

triads:
  - un-preprocessed: |-
      #define XOR(a, b) a ^ b

      int main(void) {
        char c = XOR('a', 'b');
        return 0;
      }
    preprocessed: |-
      int main(void) {
        char c = 'a' ^ 'b';
        return 0;
      }
    converted: |-
      // Return type and parameter types inferred from invocation.
      char XOR(char a, char b) { return a ^ b; }

      int main(void) {
        char c = XOR('a', 'b');
        return 0;
      }
