grammar: |-
  DEC_DIGIT   :=  "0"|"1"|"2"|"3"|"4"|"5"|"6"|"7"|"8"|"9" ;
  DEC_NUMBER  :=  DEC_DIGIT, {DEC_DIGIT} ;

  SIGN        :=  "+" | "-" ;
  EXPONENT    :=  ("e" | "E"), [SIGN], DEC_NUMBER ;
  FLOAT       :=  [DEC_NUMBER], ".", DEC_NUMBER, [EXPONENT]
              |   DEC_NUMBER, ".", [DEC_NUMBER], [EXPONENT] ;

triads:
  - un-preprocessed: |-
      #define A 1.0
      #define B .0e1
      #define C 1.
      #define D 1.e1

      int main(void)
      {
          float a = A;
          float b = B;
          float c = C;
          float d = D;
          return 0;
      }
    preprocessed: |-
      int main(void)
      {
          float a = 1.0;
          float b = .0e1;
          float c = 1.;
          float d = 1.e1;
          return 0;
      }
    converted: |-
      const float A = 1.0;
      const float B = .0e1;
      const float C = 1.;
      const float D = 1.e1;

      int main(void)
      {
          float a = A;
          float b = B;
          float c = C;
          float d = D;
          return 0;
      }
